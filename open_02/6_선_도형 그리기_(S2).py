# 그리기 함수
# 1. 선 그리기 , 2. 도형 그리기 , 3.문자열 출력  등을 제공
# 알고리즘을 이용하여 영상의 픽셀값 변경 가능
# 원본영상 필요하면 복사본 만들어야함

#  grayscale 영상은 컬러로 그리기 X
#  cv2.cvtColor()함수로 BGR컬러로 변환후 작업

import cv2
import numpy as np
img = np.full( (400, 400, 3), 255, np.uint8)
# img 파일 만들기 = np.이름(창의 크기, 색, numpy데이터타입)

# 1) 선 그리기
# img : 그림을 그릴 영상
# (50, 50), (200, 50)  /  (0, 0, 255)    / 5
#  x   y     x   y         B  G   R
#  => 시작점, 끝점       => 색 밝기 (빨강)   => 선의 두께
cv2.line(img, (50,50), (200,50), (0,0,255), 5)
#------------------------------------------------------
# 2-1) 사각형 그리기 (50, 200, 150, 100) ,  (0, 255, 0) ,  2
#                   x    y    w    h       B   G   R
#                  => 사각형 위치정보      => 색상, 밝기   => 두께
cv2.rectangle(img, (50, 200, 150, 100), (0, 255, 0), 2)
cv2.rectangle(img, (70, 220, 180, 280), (0, 120, 0), -1)  # -1 => 내부 모두 채우기
#                                          +내부공간채움
# 2-2) 원그리기    중심좌표   반지름    색        선두께    선모양
cv2.circle(img, (300, 100), 30, (255, 255, 0), -1, cv2.LINE_AA)
cv2.circle(img, (150, 250), 40, (255, 0, 0), 3, cv2.LINE_AA)
cv2.circle(img, (200, 250), 40, (255, 100, 0), 3, cv2.LINE_8)
# ----------------------------------------------------
# 3) 문자열 출력
text = 'Hello Python Welcome!'
#                        시작점       폰트스타일      크기     색       굵기    선모양
cv2.putText(img, text, (50, 350), cv2.FONT_ITALIC, 0.8, (100,0,150), 3, cv2.LINE_AA )
#------------------------------------------------------
cv2.imshow('img', img) # img라는 파일안에 img영상 출력.
cv2.waitKey()  # 키보드에 엔터키를 치면 -> 다름 프로그램으로 넘어감.
cv2.destroyAllWindows() # 모든창을 닫음